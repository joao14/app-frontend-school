{"version":3,"sources":["webpack:///src/services/apis.service.ts"],"names":["AuthInfo","$uid","ApisService","http","authInfo$","UNKNOWN_USER","httpOptions","headers","error","ErrorEvent","console","message","status","email","password","credential","user","pass","post","login","JSON","stringify","pipe","handleError","toPromise","token","opt","Promise","resolve","reject","get","resetpassword","then","catch","users","adduser","put","updateuser","roles","rol","rolesbyuser","removeroles","client","addclient","updateclient","flowers","flower","addflowers","updateflowers","name_","json","name","searchflower","addresourcesflower","idResource","removeresourcesflower","finca","addfinca","updatefinca","empresaCargo","delivery","addempresaCargo","updateempresaCargo","idCliente","marcaciones","mark","addmarcaciones","updatemarcaciones","invoice","registerinvoice","registerinvoicedraft","payment","registerpaymentandclaim","prealert","registerprealert","type","searchtypeComplete","searchtype","dateIni","dateFin","getsales","sales","idClient","getinvoicesbyclient","getbalancegenral","getmarcsbyname","marc","getprealertactive","getprealertactivebyClient","sendEmail","invoicesdrafts","charts","chartsbyclient","prealertdrafts","invoices","viewdraft","getXlsPrealert","getstatusprealert","addstatusprealert","updatestatusprealert","deletestatusprealert","templates","template","headTemplate","addtemplateshead","detailTemplate","addtemplatesdetaill","idTemplate","deletetemplate","idDetalle","deletetemplatedetalle","detaill","updatetemplatedetalle","pedidos","historicordersall","clieId","estado","historicordersbyclient","pedidobyclient","pedido","pedidoregister","order","updatedatesorder","notificationprealert","notification","url","body","header","set","JSON_to_URLEncoded","element","key","list","new_list","idx","push","encodeURIComponent","join"],"mappings":"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","file":"default~crm-clientes-clientes-module-ngfactory~crm-clientes-edit-edit-module-ngfactory~crm-delivery-~e453b710-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, throwError, Observable } from \"rxjs\";\nimport { retry, catchError } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport {\n    HttpClient,\n    HttpHeaders,\n    HttpErrorResponse,\n} from \"@angular/common/http\";\nexport class AuthInfo {\n    constructor(public $uid: string) { }\n\n    isLoggedIn() {\n        return !!this.$uid;\n    }\n}\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class ApisService {\n    static UNKNOWN_USER = new AuthInfo(null);\n\n    public authInfo$: BehaviorSubject<AuthInfo> = new BehaviorSubject<AuthInfo>(\n        ApisService.UNKNOWN_USER\n    );\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    /** Http Options */\n    httpOptions = {\n        headers: new HttpHeaders({\n            \"Content-Type\": \"application/json\",\n        }),\n    };\n\n    /** Captura de errores */\n    handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error(\"An error occurred:\", error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n            );\n        }\n        // return an observable with a user-facing error message\n        return throwError(\"Something bad happened; please try again later.\");\n    }\n\n\n    public login(email: string, password: string): Promise<any> {\n        let credential = {\n            user: email,\n            pass: password,\n        };;\n        return this.http\n            .post<any>(\n                environment.login,\n                JSON.stringify(credential),\n                this.httpOptions\n            )\n            .pipe(retry(2), catchError(this.handleError)).toPromise();\n    }\n\n    public resetpassword(email: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.resetpassword + email, opt).toPromise().then(email => {\n                resolve(email);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getUsers(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.users, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public addUser(user: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.adduser, user, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updateUser(user: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updateuser, user, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getRoles(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.roles, opt).toPromise().then(roles => {\n                resolve(roles);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addRolesByUser(rol: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.rolesbyuser, rol, opt).toPromise().then(roles => {\n                resolve(roles);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public removeRolesByUser(rol: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.removeroles, rol, opt).toPromise().then(roles => {\n                resolve(roles);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n\n    public getclients(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.client, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addclient(client: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addclient, client, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updateclient(client: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updateclient, client, opt).toPromise().then(users => {\n                resolve(users);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n\n    public getflowers(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.flowers, opt).toPromise().then(flowers => {\n                resolve(flowers);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addflowers(flower: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addflowers, flower, opt).toPromise().then(flower => {\n                resolve(flower);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updateflower(flower: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updateflowers, flower, opt).toPromise().then(flower => {\n                resolve(flower);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getflowerbyname(name_: string, token: string): Promise<any> {\n        let json = {\n            name: name_\n        }\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.searchflower, json, opt).toPromise().then(flowers => {\n                resolve(flowers);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addResourcesflowers(flower: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addresourcesflower, flower, opt).toPromise().then(flower => {\n                resolve(flower);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public removeResourcesflowers(idResource: number, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.removeresourcesflower + idResource, null, opt).toPromise().then(flower => {\n                resolve(flower);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n\n    public getfinca(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.finca, opt).toPromise().then(finca => {\n                resolve(finca);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addfinca(finca: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addfinca, finca, opt).toPromise().then(finca => {\n                resolve(finca);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updatefinca(finca: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updatefinca, finca, opt).toPromise().then(finca => {\n                resolve(finca);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getdeliveries(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.empresaCargo, opt).toPromise().then(delivery => {\n                resolve(delivery);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public adddelivery(delivery: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addempresaCargo, delivery, opt).toPromise().then(delivery => {\n                resolve(delivery);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updatedelivery(delivery: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updateempresaCargo, delivery, opt).toPromise().then(delivery => {\n                resolve(delivery);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    async getmarks(idCliente: number, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.marcaciones + idCliente, opt).toPromise().then(mark => {\n                resolve(mark);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addmark(mark: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addmarcaciones, mark, opt).toPromise().then(mark => {\n                resolve(mark);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updatemark(mark: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updatemarcaciones, mark, opt).toPromise().then(mark => {\n                resolve(mark);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public registerInvoice(invoice: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.registerinvoice, invoice, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public registerInvoiceDraft(invoice: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.registerinvoicedraft, invoice, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n\n    public registerPaymentClaim(payment: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.registerpaymentandclaim, payment, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public registerPrealert(prealert: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.registerprealert, prealert, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getObjectbyNameComplete(type: string, name: string, token: string): Promise<any> {\n        let json = {\n            name: name\n        }\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.searchtypeComplete + type, json, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getObjectbyName(type: string, name: string, token: string): Promise<any> {\n        let json = {\n            name: name\n        }\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.searchtype + type, json, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getsales(dateIni: string, dateFin: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getsales + dateIni + '/' + dateFin, opt).toPromise().then(sales => {\n                resolve(sales);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getInvoicesbyClient(idClient: number, dateIni: string, dateFin: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getinvoicesbyclient + idClient + '/' + dateIni + '/' + dateFin, opt).toPromise().then(sales => {\n                resolve(sales);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getBalanceGeneralbyClient(idClient: number, dateIni: string, dateFin: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getbalancegenral + idClient + '/' + dateIni + '/' + dateFin, opt).toPromise().then(sales => {\n                resolve(sales);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getMarcbyName(idClient: number, name_: string, token: string): Promise<any> {\n        let json = {\n            name: name_\n        }\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.getmarcsbyname + idClient, json, opt).toPromise().then(marc => {\n                resolve(marc);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getPrealertActive(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getprealertactive, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getPrealertActivebyClient(idClient: number, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getprealertactivebyClient + idClient, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n\n    public sendEmail(email: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.sendEmail, email, opt).toPromise().then(email => {\n                resolve(email);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getinvoicesdraft(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.invoicesdrafts, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getcharts(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.charts, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getchartsbyclient(idClient: number, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.chartsbyclient + idClient, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getprealertsdraft(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.prealertdrafts, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public generatePdfInvoiceDraft(invoices: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.viewdraft, invoices, opt).toPromise().then(invoice => {\n                resolve(invoice);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getExcelPrealertDraft(prealert: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.getXlsPrealert, prealert, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getstatusprealert(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.getstatusprealert, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addstatusprealert(status: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addstatusprealert, status, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public updatestatusprealert(status: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updatestatusprealert, status, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public deletestatusprealert(status: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.deletestatusprealert, status, opt).toPromise().then(prealert => {\n                resolve(prealert);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getTemplates(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.templates, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addTemplateHead(headTemplate: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addtemplateshead, headTemplate, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addTemplateDetaill(detailTemplate: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.addtemplatesdetaill, detailTemplate, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n\n    public deleteTemplate(idTemplate: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.deletetemplate + idTemplate, null, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public deleteTemplateDetalle(idDetalle: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.deletetemplatedetalle + idDetalle, null, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n\n    public updateTemplateDetalle(detaill: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.put<any>(environment.updatetemplatedetalle, detaill, opt).toPromise().then(template => {\n                resolve(template);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public pedidos(token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.pedidos, opt).toPromise().then(pedidos => {\n                resolve(pedidos);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public getInformationAllOrders(dateIni: string, dateFin: string, token: string): Promise<any> {\n               let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.historicordersall + '/' + dateIni + '/' + dateFin, opt).toPromise().then(pedidos => {\n                resolve(pedidos);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public getInformationAllOrdersbyClient(clieId: number, estado: string, dateIni: string, dateFin: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.historicordersbyclient + clieId + '/' + estado + '/' + dateIni + '/' + dateFin, opt).toPromise().then(pedidos => {\n                resolve(pedidos);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public pedidosbyclient(clieId: number, estado: string, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.get<any>(environment.pedidobyclient + clieId + '/' + estado + '/20210414000000/20210414000000', opt).toPromise().then(pedidos => {\n                resolve(pedidos);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n\n    }\n\n    public addpedido(pedido: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.pedidoregister, pedido, opt).toPromise().then(pedido => {\n                resolve(pedido);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public updatedatesorder(order: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.updatedatesorder, order, opt).toPromise().then(order => {\n                resolve(order);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n    public sendnotification(pedido: any, token: string): Promise<any> {\n        let opt = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            })\n        }\n        return new Promise<any>((resolve, reject) => {\n            this.http.post<any>(environment.notificationprealert, pedido, opt).toPromise().then(notification => {\n                resolve(notification);\n            }).catch(error => {\n                reject(error);\n            })\n        });\n    }\n\n\n\n    httpPost(url, body) {\n        const header = {\n            headers: new HttpHeaders()\n                .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n            //.set(\"Authorization\", `Bearer ${environment.stripe.sk}`),\n        };\n        const order = this.JSON_to_URLEncoded(body);\n        return this.http.post(url, order, header);\n    }\n\n    httpGet(url) {\n        const header = {\n            headers: new HttpHeaders()\n                .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n            //.set(\"Authorization\", `Bearer ${environment.stripe.sk}`),\n        };\n\n        return this.http.get(url, header);\n    }\n\n    JSON_to_URLEncoded(element, key?, list?) {\n        let new_list = list || [];\n        if (typeof element == \"object\") {\n            for (let idx in element) {\n                this.JSON_to_URLEncoded(\n                    element[idx],\n                    key ? key + \"[\" + idx + \"]\" : idx,\n                    new_list\n                );\n            }\n        } else {\n            new_list.push(key + \"=\" + encodeURIComponent(element));\n        }\n        return new_list.join(\"&\");\n    }\n}\n"]}