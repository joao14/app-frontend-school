{"version":3,"sources":["webpack:///node_modules/primeng/accordion/primeng-accordion.d.ts.AccordionTab.html","webpack:///node_modules/primeng/accordion/primeng-accordion.d.ts.Accordion.html","webpack:///node_modules/primeng/toolbar/primeng-toolbar.d.ts.Toolbar.html","webpack:///src/app/pages/layout/crm/delivery/delivery-routing.module.ts","webpack:///src/app/pages/layout/crm/delivery/delivery.component.html","webpack:///src/app/pages/layout/crm/delivery/delivery.component.ts","webpack:///src/app/pages/layout/crm/delivery/delivery.module.ts"],"names":["routes","path","component","children","DeliveryRoutingModule","DeliveryComponent","api","router","utilservice","deliveries","getDelivery","isLoading","next","getdeliveries","localStorage","getItem","then","data","console","log","headerApp","code","cargocompanies","catch","err","error","clear","navigate","delivery","state","JSON","stringify","name","undefined","filter","nombres","toLowerCase","indexOf","push","DeliveryModule"],"mappings":"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","file":"crm-delivery-delivery-module-ngfactory-es5.js","sourcesContent":["\n        <div class=\"ui-accordion-header ui-state-default ui-corner-all\" [ngClass]=\"{'ui-state-active': selected,'ui-state-disabled':disabled}\">\n            <a [attr.tabindex]=\"disabled ? -1 : 0\" [attr.id]=\"id\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"selected\" (click)=\"toggle($event)\" \n                (keydown)=\"onKeydown($event)\">\n                <span class=\"ui-accordion-toggle-icon\" [ngClass]=\"selected ? accordion.collapseIcon : accordion.expandIcon\"></span>\n                <span class=\"ui-accordion-header-text\" *ngIf=\"!hasHeaderFacet\">\n                    {{header}}\n                </span>\n                <ng-content select=\"p-header\" *ngIf=\"hasHeaderFacet\"></ng-content>\n            </a>\n        </div>\n        <div [attr.id]=\"id + '-content'\" class=\"ui-accordion-content-wrapper\" [@tabContent]=\"selected ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" (@tabContent.done)=\"onToggleDone($event)\"\n            [ngClass]=\"{'ui-accordion-content-wrapper-overflown': !selected||animating}\" \n            role=\"region\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id\">\n            <div class=\"ui-accordion-content ui-widget-content\">\n                <ng-content></ng-content>\n                <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    ","\n        <div [ngClass]=\"'ui-accordion ui-widget ui-helper-reset'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"tablist\">\n            <ng-content></ng-content>\n        </div>\n    ","\n        <div [ngClass]=\"'ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"toolbar\">\n            <ng-content></ng-content>\n        </div>\n    ","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeliveryComponent } from './delivery.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DeliveryComponent,\n        children: [\n            //{ path: 'edit', loadChildren: () => import('./edit/edit.module').then(m => m.EditModule) }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DeliveryRoutingModule { }\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12\">\n        <div class=\"card no-margin\">\n            <h1>Lista de Empresas de Carga</h1>\n            <p-toast></p-toast>\n            <p-toolbar>\n                <div class=\"p-toolbar-group-left\">\n                    <button pButton label=\"Nuevo\" icon=\"pi pi-plus\" class=\"ui-button-success\"\n                        (click)=\"addDelivery()\"></button>\n                </div>\n            </p-toolbar>\n\n            <p-table #dt [value]=\"deliveries\" [paginator]=\"true\" [rows]=\"10\"\n                [showCurrentPageReport]=\"true\" class=\"p-datatable-responsive-demo\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n                [rowsPerPageOptions]=\"[10,25,50,100]\">\n\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"table-header\">\n                        {{'Lista de Empresas de Carga' | translate}}\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\" let-columns>\n                    <tr>\n                        <th> {{'Nombre' | translate}}</th>\n                        <th> {{'Teléfono' | translate}}</th>\n                        <th> {{'País' | translate}}</th>\n                        <th> {{'Ciudad' | translate}}</th>\n                        <th> {{'Estado' | translate}}</th>\n                        <th style=\"width: 8em; text-align: center;\">\n                            <button pButton type=\"button\" icon=\"pi pi-cog\"></button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'nombres', 'contains')\"\n                                    placeholder=\"Search by Name\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'phone', 'contains')\"\n                                    placeholder=\"Search by Phone\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'pais', 'contains')\"\n                                    placeholder=\"Search by Country\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'ciudad', 'contains')\"\n                                    placeholder=\"Search by City\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"ui-fluid\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"dt.filter($event.target.value, 'estado', 'startsWith')\"\n                                    placeholder=\"Search by State\" class=\"p-column-filter\">\n                            </div>\n                        </th>\n                        <th style=\"width: 8em;\">\n\n                        </th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-delivery let-columns=\"columns\">\n                    <tr [pSelectableRow]=\"delivery\" [pEditableRow]=\"delivery\" style=\"background-color: white;\">\n                        <td>{{delivery.nombres | titlecase}}</td>\n                        <td>{{delivery.phone}}</td>\n                        <td>{{delivery.pais | titlecase}}</td>\n                        <td>{{delivery.ciudad | titlecase}}</td>\n                        <td style=\"text-align: center;\">\n                            <div [class]=\"delivery.estado=='A'?'active-badge':'inactive-badge'\">\n                                <span>{{delivery.estado=='A'?'Activo':'Inactivo'}}</span>\n                            </div>\n                        </td>\n                        <td>\n                            <button pButton type=\"button\" class=\"ui-button-warning\" icon=\"pi pi-pencil\"\n                                (click)=\"edit(delivery)\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"3\">No delivery found.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n            <!--Table responsive-->\n            <div class=\"tbl_responsive\">\n                <p-accordion>\n                    <p-accordionTab header=\"Filtros de búsqueda\" [selected]=\"true\">\n                        <div class=\"ui-g form-group ui-fluid\">   \n                            <div class=\"ui-g-12 ui-md-4\">\n                                <label for=\"client\" class=\"lbl\">{{'Nombres' | translate}}</label>\n                                <input type=\"text\" pInputText [(ngModel)]=\"name\" placeholder=\"Nombre de empresa de carga\"\n                                    required pKeyFilter=\"int\" />\n                            </div>\n                            <div class=\"ui-g-12 ui-md-4\">\n                                <button pButton type=\"button\" [label]=\"'Consultar' | translate\" icon=\"fa fa-search\"\n                                    iconPos=\"left\" class=\"ui-button-success\" (click)=\"consultarMobile()\"></button>\n                            </div>\n                        </div>\n                    </p-accordionTab>\n                </p-accordion>                \n                <div *ngIf=\"deliveries.length <=0\" style=\"text-align: center;\">\n                    <br>\n                    <label class=\"messageData\">{{'Información no encontrada' | translate}}</label>\n                </div>\n                <div class=\"ui-grid ui-grid-responsive ui-fluid\" class=\"data\" *ngFor=\"let delivery of deliveries\">\n                    <div class=\"card card-w-title\">\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-12\">\n                                <button pButton type=\"button\" class=\"ui-button-info btn_card\" icon=\"pi pi-pencil\"\n                                    (click)=\"edit(delivery)\"></button>\n                            </div>\n                        </div>\n\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Nombres' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\" style=\"word-break: break-all;\">{{delivery.nombres | titlecase}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Teléfono' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\">{{delivery.phone}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'País' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\">{{delivery.pais}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Ciudad' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\"\n                                    style=\"word-break: break-all;\">{{delivery.ciudad}}</span></div>\n                        </div>\n                        <div class=\"ui-grid-row\">\n                            <div class=\"ui-grid-col-6\"><span class=\"label\">{{'Estado' | translate}}</span></div>\n                            <div class=\"ui-grid-col-6\"><span class=\"value\"\n                                    [class]=\"delivery.estado=='A'?'active-badge':'inactive-badge'\">\n                                    {{delivery.estado=='A'?'Activo':'Inactivo'}}\n                                </span></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { delivery } from 'src/models/delivery';\nimport { ApisService } from 'src/services/apis.service';\nimport { MessageService } from 'primeng';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\nimport { UtilService } from 'src/services/util.service';\n\n@Component({\n  selector: 'app-delivery',\n  templateUrl: './delivery.component.html',\n  styleUrls: ['./delivery.component.css'],\n  providers: [TranslateService, MessageService],  \n})\nexport class DeliveryComponent implements OnInit {\n\n  deliveries: Array<delivery> = [];\n  name: string;\n\n  constructor(private api: ApisService, private router: Router, private utilservice: UtilService) { }\n\n  ngOnInit(): void {\n    this.getDelivery();\n  }\n\n  getDelivery(){ \n    this.utilservice.isLoading.next(true);\n    this.api.getdeliveries(localStorage.getItem(\"token\")).then(data => {\n      console.log(data);\n      if (data.headerApp.code == 200) {\n        this.deliveries = data.data.cargocompanies;\n        this.utilservice.isLoading.next(false);\n      }\n    }).catch(err => {\n      console.log(err);\n      this.utilservice.isLoading.next(false);\n      if (err.error.code == 401) {\n        localStorage.clear();\n        this.router.navigate(['/login']);\n      }\n    })\n  }\n\n  addDelivery() {\n    console.log('Agregar la finca');\n    this.router.navigate(['/editDelivery']);\n  }\n\n  edit(delivery: delivery){\n    console.log('Editando delivery...');\n    console.log(delivery);\n    this.router.navigate(['/editDelivery'], { state: { delivery: JSON.stringify(delivery) } });\n    \n  }\n\n  consultarMobile(){\n    if (this.name == undefined || this.name == '') {\n      this.deliveries = [];\n      this.getDelivery();\n      return;\n    }\n\n    this.deliveries.filter(delivery => {\n      if (delivery.nombres.toLowerCase().indexOf(this.name.toLowerCase()) > -1) {\n        this.deliveries = [];\n        this.deliveries.push(delivery)\n      } \n    });\n    console.log('Deliveries finales');\n    console.log(this.deliveries);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditComponent } from './edit/edit.component';\nimport { TableModule, InputSwitchModule, ToastModule, MessagesModule, MessageModule, ToolbarModule, SelectButtonModule, InputTextModule, InputTextareaModule, ButtonModule, DropdownModule, AccordionModule } from 'primeng';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeliveryRoutingModule } from './delivery-routing.module';\nimport { DeliveryComponent } from './delivery.component';\n\n\n\n@NgModule({\n  declarations: [DeliveryComponent],\n  imports: [\n    CommonModule,\n    DeliveryRoutingModule,\n    TableModule,\n    InputSwitchModule,\n    TranslateModule,\n    ToastModule,\n    MessagesModule,\n    MessageModule,\n    ToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SelectButtonModule,\n    InputTextModule,\n    InputTextareaModule,\n    ButtonModule,\n    DropdownModule,\n    AccordionModule\n  ]\n})\nexport class DeliveryModule { }\n"]}