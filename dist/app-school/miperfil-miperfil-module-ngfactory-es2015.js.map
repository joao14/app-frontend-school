{"version":3,"sources":["./node_modules/primeng/toolbar/primeng-toolbar.d.ts.Toolbar.html","./src/app/pages/layout/miperfil/miperfil-routing.module.ts","./src/app/pages/layout/miperfil/miperfil.component.html","./src/app/pages/layout/miperfil/miperfil.component.ts","./src/app/pages/layout/miperfil/miperfil.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6FACQ,+4BAAgJ,GAC5I,0DAAY,iDAD4F,mBAAoB,aAA3H,wFAAoF,EAAzF,YAAgJ,EAApC,SAAoB,EAA3H,SAAoF,GAAC,mBAAiB,QAA3G,YAAgJ,EAAtD,SAAiB;;;;;;;;;;;;;;;;ACDnH;AAAA;AAAA;AAAyD;AAIzD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB;KACzC;CACJ,CAAC;AAMK,MAAM,qBAAqB;CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCTrB,qTAAgJ,YAAxE;;wBAAoB;MAA5F,ySAAgJ,yBAAf,sBAAc,EAAvF,yBAAe,EAAuC,6BAAkB,EAAhI,YAAgJ,EAAf,SAAc,EAAvF,SAAe,EAAuC,SAAkB;uGAChI,sTAA+I,YAArD;;wBAAkB;MAA5G,ySAA+I,yBAAf,sBAAc,EAAtF,0BAAgB,EAAqC,6BAAkB,EAA/H,YAA+I,EAAf,SAAc,EAAtF,SAAgB,EAAqC,SAAkB;uGAC/H,qTAA6I,YAAtD;;wBAAkB;MAAzG,ySAA6I,yBAAf,sBAAc,EAApF,wBAAc,EAAoC,8BAAmB,EAA7H,YAA6I,EAAf,SAAc,EAApF,SAAc,EAAoC,SAAmB;uGAO7H,8NAA4F,YAAlD;;wBAA8B;MAAxE,wBAA4F;uGAd5G,yIAAkB,KACd,mJAA6B,KAC7B,oJAA6B,KACzB,+gBAAW,IACP,qJAAkC,KAC9B,0YAAgJ,IAAS,gFACzJ,iZAA+I,IAAS,gFACxJ,iZAA6I,IAGrJ,olBAAS,MACT,6JAAqC,KAEjC,8KAAiD,KAC7C,2YAA4F,IAC5F,uHAAI,KAGR,4IAAqB,KACjB,mJAA4B,gGAAc,MAC1C;;;2SAA8H,IAC9H,uHAAM,KAEV,4IAAqB,KACjB,yIAAkB,oFAAO,MACzB;;;2SAA8G,IAC9G,uHAAM,KAEV,4IAAqB,KACjB,6IAAsB,sFAAS,MAC/B;;;2SAAsH,IACtH,uHAAM,KAEV,4IAAqB,KACjB,0IAAmB,kFAAK,MACxB;;;2SAAgG,IAChG,uHAAM,KAEV,4IAAqB,KACjB,0IAAmB,qFAAQ,MAC3B;;;2SAAgG,IAChG,uHAAM,KAEV,4IAAqB,KACjB,0IAAmB,kFAAK,MACxB,kJAA2B,KACvB;;;;;;;;;;;;mUAAoH,IACpH,mOAAkF,YAA9B;;wBAA6B;MAAjF,4PAAkF,IAKlG,oJAA6B,kDA/C4E,oBAAgB,UAA7G,YAAgJ,EAAnD,SAAgB,GACpC,oBAAgB,UAAzF,aAA+I,EAAtE,SAAgB,GAClB,mBAAe,UAAtF,aAA6I,EAAtE,SAAe,GAG9F,aAAS,GAIwE,oBAAgB,UAAzF,aAA4F,EAAnB,SAAgB,GAMzF,aAA8H,GAK9H,aAA8G,GAK9G,aAAsH,GAKtH,aAAgG,GAKhG,aAAgG,GAMxB,oBAAwB,UAA5F,aAAoH,EAAhD,UAAwB,GACtD,oBAAa,OAAnD,aAAkF,EAA5C,UAAa,mDA3BvD,+OAA8H,GAKhG,mBAAoB,UAAlD,6LAA8G,EAAhF,SAAoB,EAAlD,0DAA8G,GAKhF,oBAAoB,UAAlD,6LAAsH,EAAxF,UAAoB,EAAlD,0DAAsH,GAKrE,oBAAoB,UAArE,6LAAgG,EAA/C,UAAoB,EAArE,0DAAgG,GAK/C,oBAAoB,UAArE,6LAAgG,EAA/C,UAAoB,EAArE,0DAAgG,GAMC,oBAAoB,UAAjH,6LAAoH,EAAvB,UAAoB,EAAjH,0DAAoH;;;;;;;;;;;;;;;;;;;;;AC9CpE;AAiB7D,MAAM,iBAAiB;IAc1B,YAAoB,EAAe,EAAU,GAAgB,EAAU,MAAc,EAAU,WAAwB,EAC3G,cAA8B;QADtB,OAAE,GAAF,EAAE,CAAa;QAAU,QAAG,GAAH,GAAG,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC3G,mBAAc,GAAd,cAAc,CAAgB;QAT1C,YAAO,GAAY,IAAI,CAAC;QAUpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACrE,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBAChC,yDAAU,CAAC,OAAO,CAAC,uIAAuI,CAAC,CAAC,CAAC;SAChK,CAAC,CAAC;IACP,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,0CAA0C;QAC1C,iEAAiE;QACjE,wDAAwD;QACxD,gEAAgE;QAChE,0DAA0D;IAC9D,CAAC;IAED,iBAAiB;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;SAC3B;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;SACjC;IACL,CAAC;IAED,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAID,OAAO,CAAC,KAAK;QACT,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAClB,OAAO;QACX,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE7B,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACpC,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,OAAO;SACV;QACD,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9B;;WAEG;IACP,CAAC;IAED,MAAM;QACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,MAAM;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEK,QAAQ;;YACV;;;;;;;;;;;;eAYG;YAEH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qDAiDyC;QAE7C,CAAC;KAAA;CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJD;AAAA;AAAO,MAAM,cAAc;CAAI","file":"miperfil-miperfil-module-ngfactory-es2015.js","sourcesContent":["\n        <div [ngClass]=\"'ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"toolbar\">\n            <ng-content></ng-content>\n        </div>\n    ","import { MiperfilComponent } from './miperfil.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '', component: MiperfilComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MiperfilRoutingModule {}\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12 ui-lg-3\"></div>\n    <div class=\"ui-g-12 ui-lg-6\">\n        <p-toolbar>\n            <div class=\"p-toolbar-group-left\">\n                <button pButton class=\"ui-button-success\" type=\"button\" label=\"Guardar\" (click)=\"sendData()\" *ngIf=\"!enabled\" icon=\"pi pi-check\" iconPos=\"left\"></button> &nbsp;\n                <button pButton class=\"ui-button-warning\" type=\"button\" label=\"Cancelar\" *ngIf=\"!enabled\" (click)=\"cancel()\" icon=\"pi pi-times\" iconPos=\"left\"></button> &nbsp;\n                <button pButton class=\"ui-button-primary\" type=\"button\" label=\"Editar\" *ngIf=\"enabled\" (click)=\"modify()\" icon=\"pi pi-pencil\" iconPos=\"left\"></button>\n            </div>\n        </p-toolbar>\n        <p-toast></p-toast>\n        <div class=\"card no-margin ui-fluid\">\n\n            <div class=\"p-field\" style=\"text-align: center;\">\n                <input #file type=\"file\" accept='image/*' (change)=\"preview(file.files)\" *ngIf=\"!enabled\" />\n                <br>\n                <!--<img [src]=\"user.photo==null ? '../../../../assets/images/perfil.png':user.photo\" height=\"250\" onError=\"this.src='assets/images/user2.png'\">-->\n            </div>\n            <div class=\"p-field\">\n                <label for=\"identification\">Identificaci√≥n</label>\n                <input type=\"text\" pInputText name=\"identification\" id=\"identification\" minlength=\"10\" autocomplete=\"off\" readonly required />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"name\">Nombres</label>\n                <input type=\"text\" pInputText [readonly]=\"enabled\" autocomplete=\"off\" maxlength=\"100\" name=\"name\" id=\"name\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"lastname\">Apellidos</label>\n                <input type=\"text\" pInputText [readonly]=\"enabled\" autocomplete=\"off\" maxlength=\"100\" name=\"lastname\" id=\"lastname\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" pInputText autocomplete=\"off\" [readonly]=\"enabled\" name=\"email\" id=\"email\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"clave\">Nickname</label>\n                <input type=\"text\" pInputText autocomplete=\"off\" [readonly]=\"enabled\" name=\"clave\" id=\"clave\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"clave\">Clave</label>\n                <div class=\"ui-inputgroup\">\n                    <input type=\"password\" autocomplete=\"off\" maxlength=\"100\" pPassword [showPassword]=\"looking\" [readonly]=\"enabled\" />\n                    <button type=\"button\" pButton pRipple [icon]=\"icon\" (click)=\"changelookpasswor()\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"ui-g-12 ui-lg-3\"></div>\n</div>","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { user } from './../../../../models/user';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ApisService } from 'src/services/apis.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from 'src/services/util.service';\nimport { MessageService } from 'primeng';\nimport { roles } from 'src/models/roles';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n    selector: 'app-miperfil',\n    templateUrl: './miperfil.component.html',\n    styleUrls: ['./miperfil.component.css'],\n    providers: [TranslateService, MessageService],\n})\nexport class MiperfilComponent implements OnInit {\n\n    user: user;\n    public imagePath;\n    imgURL: any;\n    public message: string;\n    enabled: boolean = true;\n    profileForm: FormGroup;\n    email_: string;\n    texto: string;\n    looking: boolean;\n    icon: string;\n    urlphoto: string;\n\n    constructor(private fb: FormBuilder, private api: ApisService, private router: Router, private utilService: UtilService,\n        private messageService: MessageService) {\n        this.profileForm = this.fb.group({\n            identification: ['', [Validators.required, Validators.minLength(10)]],\n            name: ['', Validators.required],\n            lastname: ['', Validators.required],\n            email: ['', [Validators.required,\n            Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")]]\n        });\n    }\n    ngOnInit() {\n        this.urlphoto = \"\";\n        this.icon = \"pi pi-eye\";\n        this.looking = false;\n        this.user = JSON.parse(localStorage.getItem('user'));        \n        //this.user.clave = atob(this.user.clave);\n        //this.profileForm.get('identification').setValue(this.user.dni);\n        //this.profileForm.get('name').setValue(this.user.name);\n        //this.profileForm.get('lastname').setValue(this.user.lastname);\n        //this.profileForm.get('email').setValue(this.user.email);\n    }\n\n    changelookpasswor() {\n        if (this.looking) {\n            this.looking = false;\n            this.icon = \"pi pi-eye\";\n        } else {\n            this.looking = true;\n            this.icon = \"pi pi-eye-slash\";\n        }\n    }\n\n    get identification() {\n        return this.profileForm.get('identification');\n    }\n\n    get name() {\n        return this.profileForm.get('name');\n    }\n\n    get lastname() {\n        return this.profileForm.get('lastname');\n    }\n\n    get email() {\n        return this.profileForm.get('email');\n    }\n\n\n\n    preview(files) {\n        if (files.length === 0)\n            return;\n        var mimeType = files[0].type;\n\n        if (mimeType.match(/image\\/*/) == null) {\n            this.message = \"Only images are supported.\";\n            return;\n        }\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        this.urlphoto = files[0].name;\n        /*reader.onload = (_event) => {\n            this.user.photo = reader.result.toString();\n        }*/\n    }\n\n    modify() {\n        this.enabled = false;\n    }\n\n    cancel() {\n        this.enabled = true;\n    }\n\n    async sendData() {\n        /*let user = {\n            apellidos: this.user.lastname,\n            nombres: this.user.name,\n            dni: this.user.dni,\n            nickname: this.user.nickname,\n            email: this.user.email,\n            clave: btoa(this.user.clave),\n            entiId: this.user.empresa['entiid'],\n            estado: this.user.state,\n            photo: this.urlphoto == '' ? null : this.urlphoto + ';' + this.user.photo,\n            usuaId: this.user.usuaid,\n            fechregi: new Date().toISOString()\n        }*/\n        \n        this.utilService.isLoading.next(true);\n        /*await this.api.updateUser(user, localStorage.getItem('token')).then(async (data) => {\n          \n            if (data.headerApp.code == 200) {\n                await localStorage.removeItem('user');\n                var roles_: roles[] = [];\n                data.data.roles.forEach(element => {\n                    let rol = {\n                        id: element.id,\n                        rol: element.rol,\n                        shorcut: element.shorcut\n                    }\n                    roles_.push(rol);\n                });\n                let empresa = {\n                    dni: data.data.usuario.empresa.dni,\n                    entiid: data.data.usuario.empresa.entiid,\n                    nombcome: data.data.usuario.empresa.nombcome,\n                    razosoci: data.data.usuario.empresa.razosoci,\n                }\n                let user: user = {\n                    usuaid: data.data.usuario.usuaid,\n                    dni: data.data.usuario.dni,\n                    email: data.data.usuario.email,\n                    state: data.data.usuario.estado,\n                    name: data.data.usuario.nombres,\n                    lastname: data.data.usuario.apellidos,\n                    roles: roles_,\n                    photo: environment.url + data.data.usuario.photo,\n                    empresa: empresa,\n                    clave: atob(data.data.usuario.clave),\n                    nickname: data.data.usuario.nickname\n                }\n                this.user = user;\n                await localStorage.setItem(\"user\", JSON.stringify(this.user));\n                this.messageService.add({ severity: 'success', summary: 'Rosa M√≠stica', detail: 'Se a actualizado los datos del usuario' });\n                this.enabled=true;\n                this.looking=false;\n                this.utilService.user.next(JSON.stringify(this.user));\n            }else{\n                this.messageService.add({ severity: 'error', summary: 'Rosa M√≠stica', detail: data.headerApp.message });\n            }\n\n        }).catch(err => {\n            if (err.error.code == 401) {\n                localStorage.clear();\n                this.router.navigate(['/login']);\n            }\n\n        });\n        this.utilService.isLoading.next(false);*/\n\n    }\n\n}\n","import { ToolbarModule } from 'primeng/toolbar';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MiperfilRoutingModule } from './miperfil-routing.module';\nimport { MiperfilComponent } from './miperfil.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PasswordModule, ToastModule } from 'primeng';\n\n\n\n@NgModule({\n  declarations: [MiperfilComponent],\n  imports: [\n    CommonModule,\n    MiperfilRoutingModule,\n    InputTextModule,\n    ButtonModule,\n    ReactiveFormsModule,\n    ToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PasswordModule,\n    ToastModule\n  ]\n})\nexport class MiperfilModule { }\n"],"sourceRoot":"webpack:///"}