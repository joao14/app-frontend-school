{"version":3,"sources":["webpack:///node_modules/primeng/toolbar/primeng-toolbar.d.ts.Toolbar.html","webpack:///src/app/pages/layout/miperfil/miperfil-routing.module.ts","webpack:///src/app/pages/layout/miperfil/miperfil.component.html","webpack:///src/app/pages/layout/miperfil/miperfil.component.ts","webpack:///src/app/pages/layout/miperfil/miperfil.module.ts"],"names":["routes","path","component","MiperfilRoutingModule","MiperfilComponent","fb","api","router","utilService","messageService","enabled","profileForm","group","identification","required","minLength","name","lastname","email","pattern","urlphoto","icon","looking","user","JSON","parse","localStorage","getItem","get","files","length","mimeType","type","match","message","reader","FileReader","readAsDataURL","isLoading","next","MiperfilModule"],"mappings":"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","file":"miperfil-miperfil-module-ngfactory-es5.js","sourcesContent":["\n        <div [ngClass]=\"'ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"toolbar\">\n            <ng-content></ng-content>\n        </div>\n    ","import { MiperfilComponent } from './miperfil.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '', component: MiperfilComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MiperfilRoutingModule {}\n","<div class=\"ui-g\">\n    <div class=\"ui-g-12 ui-lg-3\"></div>\n    <div class=\"ui-g-12 ui-lg-6\">\n        <p-toolbar>\n            <div class=\"p-toolbar-group-left\">\n                <button pButton class=\"ui-button-success\" type=\"button\" label=\"Guardar\" (click)=\"sendData()\" *ngIf=\"!enabled\" icon=\"pi pi-check\" iconPos=\"left\"></button> &nbsp;\n                <button pButton class=\"ui-button-warning\" type=\"button\" label=\"Cancelar\" *ngIf=\"!enabled\" (click)=\"cancel()\" icon=\"pi pi-times\" iconPos=\"left\"></button> &nbsp;\n                <button pButton class=\"ui-button-primary\" type=\"button\" label=\"Editar\" *ngIf=\"enabled\" (click)=\"modify()\" icon=\"pi pi-pencil\" iconPos=\"left\"></button>\n            </div>\n        </p-toolbar>\n        <p-toast></p-toast>\n        <div class=\"card no-margin ui-fluid\">\n\n            <div class=\"p-field\" style=\"text-align: center;\">\n                <input #file type=\"file\" accept='image/*' (change)=\"preview(file.files)\" *ngIf=\"!enabled\" />\n                <br>\n                <!--<img [src]=\"user.photo==null ? '../../../../assets/images/perfil.png':user.photo\" height=\"250\" onError=\"this.src='assets/images/user2.png'\">-->\n            </div>\n            <div class=\"p-field\">\n                <label for=\"identification\">Identificaci√≥n</label>\n                <input type=\"text\" pInputText name=\"identification\" id=\"identification\" minlength=\"10\" autocomplete=\"off\" readonly required />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"name\">Nombres</label>\n                <input type=\"text\" pInputText [readonly]=\"enabled\" autocomplete=\"off\" maxlength=\"100\" name=\"name\" id=\"name\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"lastname\">Apellidos</label>\n                <input type=\"text\" pInputText [readonly]=\"enabled\" autocomplete=\"off\" maxlength=\"100\" name=\"lastname\" id=\"lastname\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" pInputText autocomplete=\"off\" [readonly]=\"enabled\" name=\"email\" id=\"email\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"clave\">Nickname</label>\n                <input type=\"text\" pInputText autocomplete=\"off\" [readonly]=\"enabled\" name=\"clave\" id=\"clave\" />\n                <br />\n            </div>\n            <div class=\"p-field\">\n                <label for=\"clave\">Clave</label>\n                <div class=\"ui-inputgroup\">\n                    <input type=\"password\" autocomplete=\"off\" maxlength=\"100\" pPassword [showPassword]=\"looking\" [readonly]=\"enabled\" />\n                    <button type=\"button\" pButton pRipple [icon]=\"icon\" (click)=\"changelookpasswor()\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"ui-g-12 ui-lg-3\"></div>\n</div>","import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { user } from './../../../../models/user';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Component, OnInit } from '@angular/core';\nimport { ApisService } from 'src/services/apis.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from 'src/services/util.service';\nimport { MessageService } from 'primeng';\nimport { roles } from 'src/models/roles';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n    selector: 'app-miperfil',\n    templateUrl: './miperfil.component.html',\n    styleUrls: ['./miperfil.component.css'],\n    providers: [TranslateService, MessageService],\n})\nexport class MiperfilComponent implements OnInit {\n\n    user: user;\n    public imagePath;\n    imgURL: any;\n    public message: string;\n    enabled: boolean = true;\n    profileForm: FormGroup;\n    email_: string;\n    texto: string;\n    looking: boolean;\n    icon: string;\n    urlphoto: string;\n\n    constructor(private fb: FormBuilder, private api: ApisService, private router: Router, private utilService: UtilService,\n        private messageService: MessageService) {\n        this.profileForm = this.fb.group({\n            identification: ['', [Validators.required, Validators.minLength(10)]],\n            name: ['', Validators.required],\n            lastname: ['', Validators.required],\n            email: ['', [Validators.required,\n            Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")]]\n        });\n    }\n    ngOnInit() {\n        this.urlphoto = \"\";\n        this.icon = \"pi pi-eye\";\n        this.looking = false;\n        this.user = JSON.parse(localStorage.getItem('user'));        \n        //this.user.clave = atob(this.user.clave);\n        //this.profileForm.get('identification').setValue(this.user.dni);\n        //this.profileForm.get('name').setValue(this.user.name);\n        //this.profileForm.get('lastname').setValue(this.user.lastname);\n        //this.profileForm.get('email').setValue(this.user.email);\n    }\n\n    changelookpasswor() {\n        if (this.looking) {\n            this.looking = false;\n            this.icon = \"pi pi-eye\";\n        } else {\n            this.looking = true;\n            this.icon = \"pi pi-eye-slash\";\n        }\n    }\n\n    get identification() {\n        return this.profileForm.get('identification');\n    }\n\n    get name() {\n        return this.profileForm.get('name');\n    }\n\n    get lastname() {\n        return this.profileForm.get('lastname');\n    }\n\n    get email() {\n        return this.profileForm.get('email');\n    }\n\n\n\n    preview(files) {\n        if (files.length === 0)\n            return;\n        var mimeType = files[0].type;\n\n        if (mimeType.match(/image\\/*/) == null) {\n            this.message = \"Only images are supported.\";\n            return;\n        }\n        var reader = new FileReader();\n        reader.readAsDataURL(files[0]);\n        this.urlphoto = files[0].name;\n        /*reader.onload = (_event) => {\n            this.user.photo = reader.result.toString();\n        }*/\n    }\n\n    modify() {\n        this.enabled = false;\n    }\n\n    cancel() {\n        this.enabled = true;\n    }\n\n    async sendData() {\n        /*let user = {\n            apellidos: this.user.lastname,\n            nombres: this.user.name,\n            dni: this.user.dni,\n            nickname: this.user.nickname,\n            email: this.user.email,\n            clave: btoa(this.user.clave),\n            entiId: this.user.empresa['entiid'],\n            estado: this.user.state,\n            photo: this.urlphoto == '' ? null : this.urlphoto + ';' + this.user.photo,\n            usuaId: this.user.usuaid,\n            fechregi: new Date().toISOString()\n        }*/\n        \n        this.utilService.isLoading.next(true);\n        /*await this.api.updateUser(user, localStorage.getItem('token')).then(async (data) => {\n          \n            if (data.headerApp.code == 200) {\n                await localStorage.removeItem('user');\n                var roles_: roles[] = [];\n                data.data.roles.forEach(element => {\n                    let rol = {\n                        id: element.id,\n                        rol: element.rol,\n                        shorcut: element.shorcut\n                    }\n                    roles_.push(rol);\n                });\n                let empresa = {\n                    dni: data.data.usuario.empresa.dni,\n                    entiid: data.data.usuario.empresa.entiid,\n                    nombcome: data.data.usuario.empresa.nombcome,\n                    razosoci: data.data.usuario.empresa.razosoci,\n                }\n                let user: user = {\n                    usuaid: data.data.usuario.usuaid,\n                    dni: data.data.usuario.dni,\n                    email: data.data.usuario.email,\n                    state: data.data.usuario.estado,\n                    name: data.data.usuario.nombres,\n                    lastname: data.data.usuario.apellidos,\n                    roles: roles_,\n                    photo: environment.url + data.data.usuario.photo,\n                    empresa: empresa,\n                    clave: atob(data.data.usuario.clave),\n                    nickname: data.data.usuario.nickname\n                }\n                this.user = user;\n                await localStorage.setItem(\"user\", JSON.stringify(this.user));\n                this.messageService.add({ severity: 'success', summary: 'Rosa M√≠stica', detail: 'Se a actualizado los datos del usuario' });\n                this.enabled=true;\n                this.looking=false;\n                this.utilService.user.next(JSON.stringify(this.user));\n            }else{\n                this.messageService.add({ severity: 'error', summary: 'Rosa M√≠stica', detail: data.headerApp.message });\n            }\n\n        }).catch(err => {\n            if (err.error.code == 401) {\n                localStorage.clear();\n                this.router.navigate(['/login']);\n            }\n\n        });\n        this.utilService.isLoading.next(false);*/\n\n    }\n\n}\n","import { ToolbarModule } from 'primeng/toolbar';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MiperfilRoutingModule } from './miperfil-routing.module';\nimport { MiperfilComponent } from './miperfil.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PasswordModule, ToastModule } from 'primeng';\n\n\n\n@NgModule({\n  declarations: [MiperfilComponent],\n  imports: [\n    CommonModule,\n    MiperfilRoutingModule,\n    InputTextModule,\n    ButtonModule,\n    ReactiveFormsModule,\n    ToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PasswordModule,\n    ToastModule\n  ]\n})\nexport class MiperfilModule { }\n"]}